package com.iluwatar.singleton;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.deeptestutils.CompareWithFieldList;
import com.diffblue.deeptestutils.Reflector;
/** Test class */
public class ThreadSafeDoubleCheckLockinggetInstance000f55e851fd7841863Test {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /*testedClasses: com/iluwatar/singleton/ThreadSafeDoubleCheckLocking.java */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 59 branch to line 62
   * conditional line 67 branch to line 70
   * conditional line 70 branch to line 70
   */

  @Test
  public void comiluwatersingletonThreadSafeDoubleCheckLockinggetInstance000f55e851fd7841863() throws Throwable {

    com.iluwatar.singleton.ThreadSafeDoubleCheckLocking retval;
    {
      /* Arrange */

      /* Act */
      retval = com.iluwatar.singleton.ThreadSafeDoubleCheckLocking.getInstance();
    }
    {
      /* Assert result */
      Assert.assertNotNull(retval);
    }
  }
}
