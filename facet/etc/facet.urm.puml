@startuml
package com.iluwatar.facet {
  class AccessController {
    + AccessController()
    + checkPermission(user : User) : boolean {static}
  }
  class Administrator {
    + Administrator()
  }
  class App {
    - LOGGER : Logger {static}
    + App()
    + main(args : String[]) {static}
  }
  class Client {
    + Client()
  }
  interface Context {
    + setUser(User) {abstract}
    + validateInterface(Class<T>) : boolean {abstract}
  }
  class CurrentContext {
    - user : User
    + CurrentContext()
    + setUser(user : User)
    + validateInterface(interfaceClass : Class<T>) : boolean
  }
  class DefaultSentry {
    - context : Context
    + DefaultSentry(context : Context)
    + execute(user : User, interfaceClass : Class<T>) : boolean
  }
  class Facet {
    - classes : Class[]
    - sentry : Sentry
    - user : User
    - Facet()
    + create(sentry : Sentry, classes : Class[]) : Facet {static}
    + invokeSecurityMethod(interfaceClass : Class<T>) : String
    + narrow(facet : Facet, interfaces : Class[]) : Facet {static}
    + query(facet : Facet) : Class[] {static}
    + setUser(user : User)
  }
  interface SecurityMethods {
    + delegate(user : User) : String {static}
  }
  class SecurityMethodsImplementation {
    + SecurityMethodsImplementation()
    + delegate(user : User) : String {static}
  }
  interface Sentry {
    + context : Context {static}
    + execute(User, Class<T>) : boolean {abstract}
  }
  interface User {
  }
}
DefaultSentry -->  "-context" Context
Facet -->  "-sentry" Sentry
CurrentContext -->  "-user" User
Sentry -->  "-context" Context
Facet -->  "-user" User
Administrator ..|> User 
Client ..|> User 
CurrentContext ..|> Context 
DefaultSentry ..|> Sentry 
SecurityMethodsImplementation ..|> SecurityMethods 
@enduml