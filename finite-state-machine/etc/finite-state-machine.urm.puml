@startuml
package com.iluwatar.finite.state.machine {
  class App {
    + App()
    + main(args : String[]) {static}
  }
  class Context {
    - state : State
    + Context(state : State)
    + getState() : State
    + request(event : Event)
    + setState(state : State)
  }
  class CoolState {
    + CoolState()
    - Cool()
    - Stop()
    + handle(context : Context, event : Event)
  }
  enum Event {
    + MOVING_ON_OFF {static}
    + MOVING_RUN {static}
    + valueOf(name : String) : Event {static}
    + values() : Event[] {static}
  }
  class OffState {
    + OffState()
    - Start()
    + handle(context : Context, event : Event)
  }
  class OnState {
    + OnState()
    - Cool()
    - Stop()
    + handle(context : Context, event : Event)
  }
  class RunState {
    + RunState()
    - cool_down()
    + handle(context : Context, event : Event)
    - stop()
  }
  class StandState {
    + StandState()
    + handle(context : Context, event : Event)
    - start_running()
    - start_walking()
  }
  interface State {
    + handle(Context, Event) {abstract}
  }
  class WalkState {
    + WalkState()
    + handle(context : Context, event : Event)
    - start_running()
    - stop()
  }
}
Context -->  "-state" State
CoolState ..|> State 
OffState ..|> State 
OnState ..|> State 
RunState ..|> State 
StandState ..|> State 
WalkState ..|> State 
@enduml