@startuml
interface com.iluwater.microservice.shared.database.IOrderService {
~ String makeOrder(int,double)
~ Optional<String[]> getOrderTotalByCustomerId(int)
}
class com.iluwater.microservice.shared.database.CustomerService {
- {static} String DB_FILE
- Optional<String[]> findCustomerById(int)
- void setCreditLimit(int,double)
- String createCustomer(double)
+ Optional<String[]> getCustomerById(int)
+ void updateCreditLimit(int,double)
+ String newCustomer(double)
}
class com.iluwater.microservice.shared.database.OrderController {
- IOrderService orderService
+ Optional<String[]> findOrderTotalByCustomerId(int)
+ ResponseEntity<String> createOrder(int,double)
}
class com.iluwater.microservice.shared.database.OrderService {
- {static} String DB_FILE
- Optional<String[]> findOrderTotalByCustomerId(int)
- String createOrder(int,double)
- int insertOrder(List<String>)
+ String makeOrder(int,double)
+ Optional<String[]> getOrderTotalByCustomerId(int)
}
class com.iluwater.microservice.shared.database.CustomerController {
- ICustomerService customerService
+ ResponseEntity<String[]> getCustomer(int)
+ ResponseEntity<String> updateCreditLimit(int,double)
+ ResponseEntity<String> createCustomer(double)
}
interface com.iluwater.microservice.shared.database.ICustomerService {
~ Optional<String[]> getCustomerById(int)
~ void updateCreditLimit(int,double)
~ String newCustomer(double)
}
class com.iluwater.microservice.shared.database.App {
+ {static} void main(String[])
}


com.iluwater.microservice.shared.database.ICustomerService <|.. com.iluwater.microservice.shared.database.CustomerService
com.iluwater.microservice.shared.database.IOrderService <|.. com.iluwater.microservice.shared.database.OrderService

com.iluwater.microservice.shared.database.CustomerController --> com.iluwater.microservice.shared.database.ICustomerService : uses
com.iluwater.microservice.shared.database.OrderController --> com.iluwater.microservice.shared.database.IOrderService : uses
@enduml
