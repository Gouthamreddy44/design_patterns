package com.iluwatar.servant;

import org.junit.Assert;
import org.junit.rules.ExpectedException;
import org.junit.Test;

import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import com.diffblue.deeptestutils.CompareWithFieldList;
import com.diffblue.deeptestutils.Reflector;

/** Test class */
public class Appscenario000e57a8a27dfee04e9Test {

  @org.junit.Rule
  public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: com/iluwatar/servant/App.java */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   * conditional line 63 branch to line 63
   * conditional line 64 branch to line 64
   * conditional line 73 branch to line 73
   */

  @Test
  public void comiluwatarservantAppscenario000e57a8a27dfee04e9() throws Throwable {

    {
      /* Arrange */
      com.iluwatar.servant.Servant servant =
          (com.iluwatar.servant.Servant) Reflector.getInstance("com.iluwatar.servant.Servant");
      servant.name = null;
      int compliment = 2;

      /* Act */
      thrown.expect(IndexOutOfBoundsException.class);
      com.iluwatar.servant.App.scenario(servant, compliment);

      /* Method is not expected to return due to exception thrown */
    }
  }
}
